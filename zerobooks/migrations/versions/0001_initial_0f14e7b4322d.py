"""0001 initial

Revision ID: 0f14e7b4322d
Create Date: 2023-07-25 18:10:27.801407

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0f14e7b4322d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("street", sa.String(length=255), nullable=False),
        sa.Column("city", sa.String(length=255), nullable=False),
        sa.Column(
            "state",
            sa.Enum(
                "",
                "AK",
                "AL",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DC",
                "DE",
                "FL",
                "GA",
                "HI",
                "IA",
                "ID",
                "IL",
                "IN",
                "KS",
                "KY",
                "LA",
                "MA",
                "MD",
                "ME",
                "MI",
                "MN",
                "MO",
                "MS",
                "MT",
                "NC",
                "ND",
                "NE",
                "NH",
                "NJ",
                "NM",
                "NV",
                "NY",
                "OH",
                "OK",
                "OR",
                "PA",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VA",
                "VT",
                "WA",
                "WI",
                "WV",
                "WY",
                name="address_state",
            ),
            nullable=False,
        ),
        sa.Column("zipcode", sa.String(length=10), nullable=False),
        sa.Column(
            "country",
            sa.Enum(
                "",
                "AD",
                "AE",
                "AF",
                "AG",
                "AI",
                "AL",
                "AM",
                "AN",
                "AO",
                "AQ",
                "AR",
                "AS",
                "AT",
                "AU",
                "AW",
                "AZ",
                "BA",
                "BB",
                "BD",
                "BE",
                "BF",
                "BG",
                "BH",
                "BI",
                "BJ",
                "BM",
                "BN",
                "BO",
                "BR",
                "BS",
                "BT",
                "BV",
                "BW",
                "BY",
                "BZ",
                "CA",
                "CC",
                "CF",
                "CG",
                "CH",
                "CI",
                "CK",
                "CL",
                "CM",
                "CN",
                "CO",
                "CR",
                "CS",
                "CU",
                "CV",
                "CX",
                "CY",
                "CZ",
                "DE",
                "DJ",
                "DK",
                "DM",
                "DO",
                "DZ",
                "EC",
                "EE",
                "EG",
                "EH",
                "ER",
                "ES",
                "ET",
                "FI",
                "FJ",
                "FK",
                "FM",
                "FO",
                "FR",
                "FX",
                "GA",
                "GB",
                "GD",
                "GE",
                "GF",
                "GH",
                "GI",
                "GL",
                "GM",
                "GN",
                "GP",
                "GQ",
                "GR",
                "GS",
                "GT",
                "GU",
                "GW",
                "GY",
                "HK",
                "HM",
                "HN",
                "HR",
                "HT",
                "HU",
                "ID",
                "IE",
                "IL",
                "IN",
                "IO",
                "IQ",
                "IR",
                "IS",
                "IT",
                "JM",
                "JO",
                "JP",
                "KE",
                "KG",
                "KH",
                "KI",
                "KM",
                "KN",
                "KP",
                "KR",
                "KW",
                "KY",
                "KZ",
                "LA",
                "LB",
                "LC",
                "LI",
                "LK",
                "LR",
                "LS",
                "LT",
                "LU",
                "LV",
                "LY",
                "MA",
                "MC",
                "MD",
                "MG",
                "MH",
                "ML",
                "MN",
                "MM",
                "MO",
                "MP",
                "MQ",
                "MR",
                "MS",
                "MT",
                "MU",
                "MV",
                "MW",
                "MX",
                "MY",
                "MZ",
                "NA",
                "NC",
                "NE",
                "NF",
                "NG",
                "NI",
                "NL",
                "NO",
                "NP",
                "NR",
                "NU",
                "NZ",
                "OM",
                "PA",
                "PE",
                "PF",
                "PG",
                "PH",
                "PK",
                "PL",
                "PM",
                "PN",
                "PR",
                "PT",
                "PW",
                "PY",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "SA",
                "SB",
                "SC",
                "SD",
                "SE",
                "SG",
                "SH",
                "SI",
                "SJ",
                "SK",
                "SL",
                "SM",
                "SN",
                "SO",
                "SR",
                "ST",
                "SV",
                "SY",
                "SZ",
                "TC",
                "TD",
                "TF",
                "TG",
                "TH",
                "TJ",
                "TK",
                "TM",
                "TN",
                "TO",
                "TP",
                "TR",
                "TT",
                "TV",
                "TW",
                "TZ",
                "UA",
                "UG",
                "UM",
                "US",
                "UY",
                "UZ",
                "VA",
                "VC",
                "VE",
                "VG",
                "VI",
                "VN",
                "VU",
                "WF",
                "WS",
                "YE",
                "YT",
                "YU",
                "ZA",
                "ZM",
                "ZR",
                "ZW",
                name="address_country",
            ),
            nullable=False,
        ),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_address")),
        sa.UniqueConstraint("uuid", name=op.f("uq_address_uuid")),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("price", sa.Numeric(), nullable=False),
        sa.Column("taxable", sa.Boolean(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_product")),
        sa.UniqueConstraint("uuid", name=op.f("uq_product_uuid")),
    )
    op.create_table(
        "system",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name_prefixes", sa.JSON(), nullable=False),
        sa.Column("name_suffixes", sa.JSON(), nullable=False),
        sa.Column("display_name_formats", sa.JSON(), nullable=False),
        sa.Column("invoice_terms", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_system")),
    )
    op.create_table(
        "customer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("internal", sa.Boolean(), nullable=False),
        sa.Column("title", sa.String(length=10), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("middle_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("suffix", sa.String(length=10), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("display_name_format", sa.String(), nullable=False),
        sa.Column("company", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("phone", sa.String(length=15), nullable=False),
        sa.Column("mobile", sa.String(length=15), nullable=False),
        sa.Column("fax", sa.String(length=15), nullable=False),
        sa.Column("billing_address", sa.Integer(), nullable=False),
        sa.Column("shipping_address", sa.Integer(), nullable=True),
        sa.Column("website", sa.String(length=255), nullable=False),
        sa.Column("notes", sa.String(), nullable=False),
        sa.Column("open_balance", sa.Numeric(), nullable=False),
        sa.Column("total_spend", sa.Numeric(), nullable=False),
        sa.ForeignKeyConstraint(
            ["billing_address"],
            ["address.id"],
            name=op.f("fk_customer_billing_address_address"),
        ),
        sa.ForeignKeyConstraint(
            ["shipping_address"],
            ["address.id"],
            name=op.f("fk_customer_shipping_address_address"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_customer")),
        sa.UniqueConstraint("uuid", name=op.f("uq_customer_uuid")),
    )
    op.create_table(
        "invoice",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("due_date", sa.DateTime(), nullable=False),
        sa.Column("terms", sa.String(length=50), nullable=False),
        sa.Column("owner", sa.Integer(), nullable=True),
        sa.Column("customer", sa.Integer(), nullable=True),
        sa.Column("notes", sa.String(), nullable=False),
        sa.Column("project", sa.String(length=255), nullable=False),
        sa.Column("items", sa.JSON(), nullable=False),
        sa.Column("subtotal", sa.Numeric(), nullable=False),
        sa.Column("total_adjustments", sa.Numeric(), nullable=False),
        sa.Column("total_tax", sa.Numeric(), nullable=False),
        sa.Column("total_amount", sa.Numeric(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("pending", "open", "paid", "void", name="invoice_status"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer"], ["customer.id"], name=op.f("fk_invoice_customer_customer")
        ),
        sa.ForeignKeyConstraint(
            ["owner"], ["customer.id"], name=op.f("fk_invoice_owner_customer")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_invoice")),
        sa.UniqueConstraint("uuid", name=op.f("uq_invoice_uuid")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("invoice")
    op.drop_table("customer")
    op.drop_table("system")
    op.drop_table("product")
    op.drop_table("address")
    # ### end Alembic commands ###
